4일차.

 # 기본 값 사용하기.

QueryString에 따른 data.

URL/hello?cnt=3         "3"
URL/hello?cnt=          " "
URL/hello?                null
URL/hello                 null

if문을 통해 제어한다.
ex ) if( !cnt_ == null && !cnt_.equals(" ") ) 

사용.
<a href ="hello">인사말 x100 </a><br>
<a href ="hello?cnt=3">인사말 x 3</a><br>

HTML 문서로 글자를 클릭하면 해당 URL로 이동할 수 있도록 제어.


 # 사용자 입력을 통한 GET 요청.

<form action="hi" method="get">
     <input type="text" name="cnt">
     <input type="submit" value="출력">

method를 적지 않으면 GET방식을 사용하는 것이고, POST를 적으면 POST 방식을 사용.


 # 입력할 내용이 많은 경우는 POST 요청.

POST를 써야되는 이유.
1. 요청이 너무 많아지면 URL이 너무 길어진다.
2. data를 URL로 보여주는 것 자체가 문제이다. ( 보안성 )

사용법.
<form action="hi" method="post">
URL/hi 까지만 나오고 QuerySting이 나오지 않는다.

결과확인.
요청할때 사용했던 data와 name을 확인하려면 browser -> 검사 -> network에서 form을 확인하면 된다.


 # 한글 입력 문제.

문제.
<form>을 통해 queryString으로 한글 정보를 보내고 그 정보를 출력할 때 깨지는 현상이 나타난다.

원리.
Tomcat server( WEB Server )의 기본 문자를 읽는 방식이 ISO-8859-1이다 ( 1byte 방식 - 한글을 읽지 못한다 )
UTF-8로 읽을 수 있게 바꿔줘야된다.

2가지방법.
1. Servlet -> request.setCharacterEncoding("UTF-8"); 
    Servlet을 작성할때마다 넣어줘야된다.
2. Server.xml -> <Conntector port="8080" ~~~~~ URIEncoding = "UTF-8">
    문서로 작성해놓으면 무조건 UTF-8로 읽는다. ( 왠만하면 Server.xml은 건들지 않는다 )

2번방법은 거의 사용하지 않고, 1번 방법을 사용한다.












